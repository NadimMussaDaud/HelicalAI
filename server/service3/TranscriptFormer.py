from fastapi import FastAPI
from fastapi.responses import JSONResponse
import uvicorn
from pydantic import BaseModel
import pandas as pd
import numpy as np
from sklearn.cluster import KMeans

app = FastAPI()

class Dataset(BaseModel):
    model_name: str
    dataset_name: str
    batch_size: int

embeddings = [
    [-4.40904713, -6.33393335],
    [1.51268542, -3.84081793],
    [-1.29675639, -0.958311677],
    [9.72851753, 14.3564329],
    [1.38653803, 13.5518713],
    [-0.0072278892, -5.18127489],
    [0.336407453, -6.09243774],
    [1.28579831, 13.4204407],
    [2.19808984, 14.4842567],
    [1.07038081, 13.5439053],
    [1.12736082, 13.5151558],
    [-3.65466928, -5.50446081],
    [1.62757456, -4.19676495],
    [1.10860062, 13.6166821],
    [-3.30004501, -3.93904042],
    [0.439268708, 12.4644003],
    [1.28921974, 13.2981453],
    [0.703130245, 12.7222319],
    [-4.11401367, -4.44532299],
    [-0.362105727, -3.99785995],
    [0.477919936, -5.66367197],
    [1.30021203, 13.4321079],
    [-1.06672835, -3.32524037],
    [0.134091675, 12.8572187],
    [-0.0291175321, 13.0020151],
    [1.39097309, 13.4676781],
    [1.10736215, 13.5086393],
    [1.18983507, 13.5074129],
    [0.493589222, -6.24561739],
    [-3.83717918, -6.53862238],
    [1.26207328, 13.5614853],
    [-4.52464533, -6.58844662],
    [-4.09916925, -5.89753914],
    [-4.53859425, -6.30852985],
    [-3.44743872, -4.79801941],
    [-3.97222424, -4.3283968],
    [-0.126196548, 12.7383642],
    [1.32448983, 13.4217424],
    [1.28714395, 13.5375061],
    [0.797465265, 13.2979813],
    [-1.06168199, -2.7813642],
    [0.888291359, 13.0901737],
    [1.27504992, 13.5550299],
    [1.27158058, 13.5560961],
    [-1.15254295, -0.889520407],
    [0.905331492, 13.4453688],
    [1.20406091, 13.4539747],
    [1.2539947, 13.4988651],
    [0.398299098, 12.4533205],
    [1.36799884, 13.4791222],
    [1.33561254, 13.4892168],
    [0.835260332, 13.3324738],
    [1.4001534, 13.4589949],
    [1.34634686, 13.5068798],
    [-3.43010283, -5.00976324],
    [-3.58073473, -4.36348486],
    [1.29814458, 13.4238625],
    [0.70027858, 12.6716366],
    [1.26975465, 13.4784346],
    [-1.10914123, -1.16568136],
    [1.2620244, 13.4630194],
    [0.453812808, 12.8072681],
    [1.09730959, 13.5023193],
    [0.700658798, 12.6524296],
    [0.738576889, 13.0557861],
    [-3.97972155, -4.72261143],
    [1.32833099, 13.5439014],
    [-4.07820082, -5.61091709],
    [1.09211409, 13.4498816],
    [1.19324517, 13.5016346],
    [0.542083979, 12.8377743],
    [-0.0488718674, -4.23071289],
    [1.23303878, 13.4211473],
    [1.40499365, 13.4861259],
    [1.25998211, 13.4325867],
    [-0.0452857837, 13.0555115],
    [1.18788719, 13.455513],
    [1.16234386, 13.4999943],
    [-3.96512508, -4.67089128],
    [-4.33174324, -5.962111],
    [-3.55889893, -5.15201616],
    [1.31247044, 13.515707],
    [0.382667035, 12.929347],
    [1.27103353, 13.5344925],
    [1.22632861, 13.4593115],
    [-4.31180191, -5.63461113],
    [-3.88352394, -5.28744459],
    [-3.70963955, -5.78085852],
    [1.15939677, 13.4807463],
    [-3.98039484, -4.41741753],
    [-3.96559215, -4.5536747],
    [1.19770396, 13.5326471],
    [1.15588939, 13.5013809],
    [1.40499115, 13.4978409],
    [0.457416505, 12.7566624],
    [0.905608177, 13.4496784],
    [-4.1836071, -4.8762536],
    [1.28698683, 13.5082645],
    [-4.22231388, -4.97534466],
    [-4.06710005, -4.46913576],
    [1.37634218, 13.5122108],
    [1.25094032, 13.5108728],
    [1.14149857, 13.5248375],
    [1.10673332, 13.5445957],
    [0.425513506, 12.8698664],
    [0.370191127, 12.6764126],
    [1.37926269, 13.4977741],
    [1.34668946, 13.4881706]
]

embeddings = np.array(embeddings)

labels = ["ERYTHROID", "STROMA", "MYELOID", "LYMPHOID", "PROGENITOR", "MK"]



@app.post("/predict")
async def predict(request: Dataset):
    print(request.batch_size)
    print(request.model_name)
    print(request.dataset_name)

    kmeans = KMeans(n_clusters=6, random_state=42)
    clusters = kmeans.fit_predict(embeddings)

    # Create a DataFrame for analysis
    df = pd.DataFrame({
        'x': embeddings[:, 0],
        'y': embeddings[:, 1],
        'Cell Type': [labels[i] for i in clusters]  # Assigns one of 6 labels to each of 108 points
    })
    
    return {
        "data": df.to_dict(orient='records'),  # List of {x, y, Cell Type} dictionaries
        "labels": df['Cell Type'].values.tolist()  # List of unique labels
    }

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8006)